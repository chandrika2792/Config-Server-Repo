# ==========================================================
# üåê Server Configuration
# ==========================================================
server.port=8888
spring.application.name=config-server

# ==========================================================
# üß≠ GitHub Configuration Repository
# ==========================================================
# Replace with your actual GitHub repo URL
spring.cloud.config.server.git.uri=https://github.com/<your-github-username>/<your-config-repo>.git

# If your GitHub branch name is 'main' (modern default)
spring.cloud.config.server.git.default-label=main

# Clone repository at startup
spring.cloud.config.server.git.clone-on-start=true

# ==========================================================
# üîí Authentication (for Private GitHub Repos)
# ==========================================================
# Use a GitHub Personal Access Token (PAT) with "repo" scope
spring.cloud.config.server.git.username=<your-github-username>
spring.cloud.config.server.git.password=${GITHUB_TOKEN}

# üëÜ The ${GITHUB_TOKEN} should be set as an environment variable on your server:
#    Linux/macOS: export GITHUB_TOKEN=ghp_YourTokenHere
#    Windows:     set GITHUB_TOKEN=ghp_YourTokenHere
# This keeps your token out of your code and safe.

# ==========================================================
# ‚öôÔ∏è Additional Options
# ==========================================================
spring.cloud.config.server.git.skip-ssl-validation=true
spring.cloud.config.server.git.timeout=15
spring.cloud.config.server.git.force-pull=true

# ==========================================================
# ü™µ Logging (Optional: set to INFO in production)
# ==========================================================
logging.level.org.springframework.cloud.config=INFO
logging.level.org.eclipse.jgit=INFO
